{
    "openapi": "3.0.0",
    "info": {
        "title": "Solid Introduction",
        "description": "An api to demonstrate the concepts of SOLID, and validate nodejs route challenge 4",
        "version": "1.0.0"
    },
    "paths": {
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Get users",
                "description": "Get all users if the requester is admin",
                "parameters": [
                    {
                        "in": "header",
                        "name": "user_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true,
                        "description": "ID of the user that sent the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {"type": "string"},
                                            "admin": {"type": "boolean"},
                                            "email": {"type": "string"},
                                            "created_at": {"type": "string"},
                                            "updated_at": {"type": "string"}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client specified an invalid params on header.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {"type": "string"}
                                    }  
                                },
                                "examples": {
                                    "User not found": {
                                        "value": {
                                            "error": "User Not Found!"
                                        },
                                        "summary": "When user dont exists"
                                    },
                                    "Access forbidden": {
                                        "value": {
                                            "error": "Access Forbidden!"
                                        },
                                        "summary": "When user dont have permission"
                                    }
                                }   
                            }
                        }
                    }

                }
            },
            "post": {
                "tags": ["Users"],
                "summary":"Post users",
                "description": "Post a single user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            },
                            "example": {
                                "name": "Fulano de Tal",
                                "email": "fulano@email.com"
                            }
                        }
                    }
                },
                "responses": {
                  "201": {
                      "description": "Successfully create a new user"
                  },
                  "400": {
                      "description": "Trying to create a already existing user",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "error": {
                                          "type": "string"
                                      }
                                  }
                              },
                              "example": {
                                "error": "User Already Exists!"
                              }
                          }
                      }
                  }
                }
            }
        },
        "/users/:user_id": {
            "get": {
                "tags": ["Users"],
                "summary": "get a single user",
                "description": "get a single user by parameter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the user that data will be displayed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "name": {"type": "string"},
                                        "admin": {"type": "boolean"},
                                        "email": {"type": "string"},
                                        "created_at": {"type": "string"},
                                        "updated_at": {"type": "string"}
                                    }
                                },
                                "example": {
                                    "id": "SOME_UUID",
                                    "name": "Fulano de Tal",
                                    "admin": false,
                                    "email": "fulano@email.com",
                                    "created_at": "SOME_DATE",
                                    "updated_at": "SOME_DATE"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bad request, user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "User Not Found!"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:user_id/admin": {
            "patch": {
                "tags": ["Users"],
                "summary": "Update user type",
                "description": "Change a single user to a admin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of the user that data will be displayed"
                    }
                ]

            }
        }
    }
}